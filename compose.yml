name: task-tracker

services:
  postgres:
    image: docker.io/postgres:16.3-alpine3.20
    container_name: task-tracker-db
    environment:
      POSTGRES_DB: task_tracker
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: "psql -d task_tracker -U sa -c 'SELECT 1' || exit 1"
      interval: 3s
      timeout: 1s
      retries: 2
      start_period: 2s
    networks:
      - task-tracker-network

  task-tracker-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: task-tracker-api:latest
    container_name: task-tracker-api
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      JDK_JAVA_OPTIONS: -Xms256m -Xmx512m -Dspring.profiles.active=test
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: task_tracker
      DATABASE_USER: sa
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      GROQ_API_KEY: ${GROQ_API_KEY}
      GROQ_CHAT_MODEL: ${GROQ_CHAT_MODEL}
      GROQ_CHAT_TEMPERATURE: ${GROQ_CHAT_TEMPERATURE}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - task-tracker-network

volumes:
  postgres-data:

networks:
  task-tracker-network:
    driver: bridge
